Output:
-------
token                         lexeme
------------------------------------
keyword                     function
identifier                  multiply
separator                          (
identifier                   number1
separator                          ,
identifier                   number2
separator                          )
separator                          {
keyword                       return
identifier                   number1
operator                           *
identifier                   number2
separator                          ;
separator                          }
separator                          #
keyword                          int
identifier                     test0
separator                          ,
identifier                     test1
separator                          ;
keyword                         bool
identifier               trueOrFalse
separator                          ;
keyword                         real
identifier                     test2
separator                          ;
separator                          #
keyword                          get
separator                          (
identifier               trueOrFalse
separator                          ,
identifier                     test0
separator                          ,
identifier                     test1
separator                          )
separator                          ;
identifier                     test0
operator                           =
integer                            5
separator                          ;
keyword                        while
separator                          (
identifier               trueOrFalse
separator                          )
separator                          {
keyword                           if
separator                          (
identifier                     test0
operator                          ==
identifier                     test1
separator                          )
separator                          {
identifier               trueOrFalse
operator                           =
keyword                        false
separator                          ;
separator                          }
keyword                          put
separator                          (
identifier                  multiply
separator                          (
identifier                     test0
separator                          ,
identifier                     test1
separator                          )
separator                          )
separator                          ;
identifier                     test1
operator                           =
identifier                     test0
operator                           +
integer                            2
separator                          ;
separator                          }
keyword                     endwhile
keyword                           if
separator                          (
identifier                     test0
operator                           =
identifier                     test1
separator                          )
separator                          {
keyword                          put
separator                          (
identifier                     test0
separator                          )
separator                          ;
separator                          }
keyword                         else
separator                          {
keyword                          put
separator                          (
identifier                     test1
separator                          )
separator                          ;
separator                          }
keyword                           fi
invalid                  5.12a412321
